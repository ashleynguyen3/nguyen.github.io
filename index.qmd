---
title: "nguyen.github.io"
---


```{r}
library(RedditExtractoR) 
library(readr)
library(dplyr)
library(tidyverse)
library(tidytext)
```

3.
```{r}
# this code will run when rendering to read in the rds file
top_cats_urls <- read_rds("top_cats_urls.rds")
top_dogs_urls <- read_rds("top_dogs_urls.rds")
```

2.
```{r}
#| eval: false
top_cats_urls <- find_thread_urls(subreddit="cats", sort_by="top")
```

```{r}
#| eval: false
top_dogs_urls <- find_thread_urls(subreddit="dogs", sort_by="top")
```

```{r}
top_cats_tidy <- top_cats_urls |> 
  unnest_tokens(word, text) |> 
  anti_join(stop_words)

top_cats_freq <- top_cats_tidy |> 
  group_by(title) |> 
  count(word, sort=TRUE)

print(top_cats_freq)
```


```{r}
top_dogs_tidy <- top_dogs_urls |> 
  unnest_tokens(word, text) |> 
  anti_join(stop_words) 

top_dogs_freq <- top_dogs_tidy |> 
  group_by(title) |> 
  count(word, sort=TRUE)

print(top_dogs_freq)
```


4. 
```{r}
user <- "MheTusician"
reddit_user <- get_user_content(user)
```


```{r}
comments <- reddit_user[[user]]$comments

comments_tidy <- comments |> 
  unnest_tokens(word, comment) |> 
  anti_join(stop_words)

comments_freq <- comments_tidy |> 
  group_by(thread_title) |> 
  count(word, sort=TRUE)

print(comments_freq)
```

